<!doctype html>
<html lang="en">
	<head>
		<?= $this->fetch('/partials/header.phtml') ?>
		
		<style>
			textarea {
				border: none;
				overflow: auto;
				outline: none;
				-webkit-box-shadow: none;
				-moz-box-shadow: none;
				box-shadow: none;
				resize: none; /*remove the resize handle on the bottom right*/
				font: 15px Courier New;
				width: 100%;
				height: 1000px;
			}
		</style>
	</head>
	<body>
		<?= $this->fetch('/partials/navbar.phtml', $navbar) ?>
		
		<?php $customers_enabled 			= (isset($customers) and count($customers) > 0); ?>
		<?php $salesDocsTypes_enabled		= (isset($salesDocsTypes) and count($salesDocsTypes) > 0); ?>
		
		<div class="container-fluid">
			<div class="content">
				<div class="row">
					<div class="col-12 p-0">
						<div class="card card-no-rounded" style="height:100%">
							<div class="card-header d-flex justify-content-between">
								<span><b><i class="fa fa-list-ul"></i> Listado de Ventas</b></span>
							</div>
							<div class="card-body">
								
								<div class="row">
									<div class="col-lg-4 col-md-6">
										<div class="form-group">
											<label class="font-weight-bold">Clientes:</label>
											<br>
											<label <?= !$customers_enabled ? '' : 'class="d-none" ' ?>name="customers-label"><i class="fa fa-exclamation-triangle"></i> No hay clientes disponibles!</label>
											<select class="form-control<?= $customers_enabled ? '' : ' d-none' ?>" name="customers-select" multiple="multiple">
											<?php if ($customers_enabled) : ?>
											<?php foreach($customers as $customer) : ?>
												<option value="<?= $customer->id ?>">
													<?= $customer->unique_code . ' | ' . $customer->business_name ?>
												</option>
											<?php endforeach; ?>
											<?php endif; ?>
											</select>
										</div>
									</div>
								
									<div class="col-lg-4 col-md-6">
										<div class="form-group">
											<label class="font-weight-bold">Comp. de Ventas:</label>
											<div class="form-check form-check-inline">
												<input class="form-check-input" type="checkbox" name="sales-docs-types-check-nothing">
												<label class="form-check-label">Ninguno</label>
											</div>
											<br>
											<label <?= !$salesDocsTypes_enabled ? '' : 'class="d-none" ' ?>name="sales-docs-types-label"><i class="fa fa-exclamation-triangle"></i> No hay documentos disponibles!</label>
											<select class="form-control<?= $salesDocsTypes_enabled ? '' : ' d-none' ?>" name="sales-docs-types-select" multiple="multiple">
											<?php if ($salesDocsTypes_enabled) : ?>
											<?php foreach($salesDocsTypes as $documentType) : ?>
												<option
													value="<?= $documentType->unique_code ?>">
													<?= trim($documentType->description) ?>
												</option>
											<?php endforeach; ?>
											<?php endif; ?>
											</select>
										</div>
									</div>

									<div class="col-lg-4 col-md-6">
										<div class="form-group">
											<label class="font-weight-bold">Fecha:</label>
											<input class="form-control" type="date" name="dated-at">
										</div>
									</div>
								</div>
								
								<div class="row">
							        <div class="col-12 col-md-4 col-lg-3">
										<div class="btn btn-outline-primary" name="btn-report"><i class="fa fa-report"></i> Generar Reporte</div>
									</div>

									<div class="col-12 col-md-4 col-lg-3">
										<div class="btn btn-outline-primary" name="btn-export"><i class="fa fa-xls"></i> Exportar a Excel</div>
									</div>
								</div>
								
								<hr>
									
							    <div class="row mt-3">
							        <div class="col">
							            <div name="report-content" class="table table-responsive">
											<table id="table_report" name="table-report">
												<thead>
													<tr>
														<th>ID</th>
														<th>Fecha</th>
														<th>Hora</th>
														<th>Cliente</th>
														<th>Email</th>
														<th>Domicilio</th>
														<th>Contacto</th>
														<th>Tel√©fono</th>
														<th>Comentarios</th>
													</tr>
												</thead>
												<tbody>
												</tbody>
											</table>
										</div>
							        </div>
							    </div>
							</div>
						</div>
					</div>
				</div>
				
			</div>
		</div>
			
		<?= $this->fetch('/partials/libs.phtml') ?>
		
		<!-- Optional JavaScript -->
		<script>
			$(function()
			{
				if ( !$('select[name="customers-select"]').hasClass('d-none') )
					$('select[name="customers-select"]').select2({ width: '100%' });
				
				if ( !$('select[name="sales-docs-types-select"]').hasClass('d-none') )
					$('select[name="sales-docs-types-select"]').select2({ width: '100%' });
				
				// click on report
				$('div[name="btn-report"]').on('click', function(e) {
					e.preventDefault();
					
					var salesDocsCodes = ['x'];
					if ( !$('input[name="sales-docs-types-check-nothing"]').prop('checked') ) {
						salesDocsCodes = $('select[name="sales-docs-types-select"]').val();
					}
					
					$.ajax({
						method: 'POST',
						url: '/sales/report',
						data: { 
							customers_ids : 	$('select[name="customers-select"]').val(),
							sales_docs_codes : 	salesDocsCodes,
							dated_at :			$('input[name="dated-at"]').val(),
						},
						success: function(data, textStatus, jqXHR)
						{
							if (data.Result == 'OK')
							{
								var body = $('div[name="report-content"] > table[name="table-report"] > tbody');
								
								body.empty();

								data.Records.forEach(function(record) {
									body.append("<tr>" +
													"<td>" + record.id + "</td>" +
													"<td>" + record.dated_at + "</td>" +
													"<td>" + record.timed_at + "</td>" +
													"<td>" + record.business_name + "</td>" +
													"<td>" + record.email + "</td>" +
													"<td>" + record.location + "</td>" +
													"<td>" + record.contact_name + "</td>" +
													"<td>" + record.phone_number + "</td>" +
													"<td>" + record.comments + "</td>" +
												"</tr>");
								});
								
							}
							else {
								alert('error');
							}
						},
						error: function(jqXHR, textStatus, errorThrown) {
							console.warn(jqXHR.responseText);
						},
					});
				});

				// click on export
				$('div[name="btn-export"]').on('click', function(e) {
					e.preventDefault();

					//xport.toCSV('table_report');
					exportTableToExcel('table_report');
				});
				
				// checkboxes
				$('input[name="sales-docs-types-check-nothing"]').on('change', function(e) {
					var checked = $(this).prop('checked');
					$('select[name="sales-docs-types-select"]').prop("disabled", checked);
				});

				// export to excel
				var xport = {
					_fallbacktoCSV: true,  
					toXLS: function(tableId, filename) {   
						this._filename = (typeof filename == 'undefined') ? tableId : filename;
						
						//var ieVersion = this._getMsieVersion();
						//Fallback to CSV for IE & Edge
						if ((this._getMsieVersion() || this._isFirefox()) && this._fallbacktoCSV) {
						return this.toCSV(tableId);
						} else if (this._getMsieVersion() || this._isFirefox()) {
						alert("Not supported browser");
						}

						//Other Browser can download xls
						var htmltable = document.getElementById(tableId);
						var html = htmltable.outerHTML;

						this._downloadAnchor("data:application/vnd.ms-excel" + encodeURIComponent(html), 'xls'); 
					},
					toCSV: function(tableId, filename) {
						this._filename = (typeof filename === 'undefined') ? tableId : filename;
						// Generate our CSV string from out HTML Table
						var csv = this._tableToCSV(document.getElementById(tableId));
						// Create a CSV Blob
						var blob = new Blob([csv], { type: "text/csv" });

						// Determine which approach to take for the download
						if (navigator.msSaveOrOpenBlob) {
						// Works for Internet Explorer and Microsoft Edge
						navigator.msSaveOrOpenBlob(blob, this._filename + ".csv");
						} else {      
						this._downloadAnchor(URL.createObjectURL(blob), 'csv');      
						}
					},
					_getMsieVersion: function() {
						var ua = window.navigator.userAgent;

						var msie = ua.indexOf("MSIE ");
						if (msie > 0) {
						// IE 10 or older => return version number
						return parseInt(ua.substring(msie + 5, ua.indexOf(".", msie)), 10);
						}

						var trident = ua.indexOf("Trident/");
						if (trident > 0) {
						// IE 11 => return version number
						var rv = ua.indexOf("rv:");
						return parseInt(ua.substring(rv + 3, ua.indexOf(".", rv)), 10);
						}

						var edge = ua.indexOf("Edge/");
						if (edge > 0) {
						// Edge (IE 12+) => return version number
						return parseInt(ua.substring(edge + 5, ua.indexOf(".", edge)), 10);
						}

						// other browser
						return false;
					},
					_isFirefox: function(){
						if (navigator.userAgent.indexOf("Firefox") > 0) {
						return 1;
						}
						
						return 0;
					},
					_downloadAnchor: function(content, ext) {
						var anchor = document.createElement("a");
						anchor.style = "display:none !important";
						anchor.id = "downloadanchor";
						document.body.appendChild(anchor);

						// If the [download] attribute is supported, try to use it
						
						if ("download" in anchor) {
							anchor.download = this._filename + "." + ext;
						}
						anchor.href = content;
						anchor.click();
						anchor.remove();
					},
					_tableToCSV: function(table) {
						// We'll be co-opting `slice` to create arrays
						var slice = Array.prototype.slice;

						return slice
						.call(table.rows)
						.map(function(row) {
							return slice
							.call(row.cells)
							.map(function(cell) {
								return '"t"'.replace("t", cell.textContent);
							})
							.join(",");
						})
						.join("\r\n");
					}
				};

				function exportTableToExcel(tableID, filename = ''){
					var downloadLink;
					var dataType = 'application/vnd.ms-excel;charset=utf-8';
					var tableSelect = document.getElementById(tableID);
					var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');
					
					// Specify file name
					filename = filename?filename+'.xls':'excel_data.xls';
					
					// Create download link element
					downloadLink = document.createElement("a");
					
					document.body.appendChild(downloadLink);
					
					if(navigator.msSaveOrOpenBlob){
						var blob = new Blob(['\ufeff', tableHTML], {
							type: dataType
						});
						navigator.msSaveOrOpenBlob( blob, filename);
					}else{
						// Create a link to the file
						downloadLink.href = 'data:' + dataType + ', ' + tableHTML;
					
						// Setting the file name
						downloadLink.download = filename;
						
						//triggering the function
						downloadLink.click();
					}
				}

			});
		</script>
	</body>
</html>